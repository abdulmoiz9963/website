name: SonarQube + Build + Deploy to S3

on:
  push:
    branches: [main]

jobs:
  sonarqube_build:
    name: SonarQube + Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5
      with:
        args: |
          -Dsonar.projectKey=pottd-project_myreact-app
          -Dsonar.organization=pottd-project
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.sources=.
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Inject environment variables for production
      run: |
        echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env.production
        echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> .env.production
    - name: Build the frontend
      run: npm run build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: dist/

  wait_for_approval:
    name: Wait for Staging Approval
    runs-on: ubuntu-latest
    needs: sonarqube_build
    if: github.ref == 'refs/heads/main'  # Only run this job on main branch
    environment:
      name: staging
      url: http://your-staging-url.s3-website-us-east-1.amazonaws.com/  # Replace with your actual S3 site URL
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  deploy_to_s3:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: wait_for_approval
    if: github.ref == 'refs/heads/main'  # Only run this job on main branch
    environment:
      name: production
      url: http://your-production-url.s3-website-us-east-1.amazonaws.com/  # Replace with your actual S3 site URL
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: build/

      - name: Deploy to S3
        run: aws s3 sync build/ s3://${{ secrets.AWS_S3_BUCKET }} --delete
